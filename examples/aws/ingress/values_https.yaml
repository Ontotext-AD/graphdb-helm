# This example shows how to deploy and expose GraphDB with AWS Load Balancer Controller Ingress with SSL enabled.

configuration:
  # Change this to your Route53 domain name or use nip.io which you can do after you deploy the chart since you
  # need to map the public IP address of the AWS Load Balancer to the nip.io.
  externalUrl: https://ip.address.nip.io

ingress:
  enabled: true
  className: alb
  annotations:
   alb.ingress.kubernetes.io/load-balancer-name: graphdb-ingress
   alb.ingress.kubernetes.io/target-type: ip
   # This ensures the load balancer is public
   alb.ingress.kubernetes.io/scheme: internet-facing
   alb.ingress.kubernetes.io/inbound-cidrs: "0.0.0.0/0"
   # Define the ports on which the Ingress should create listener
   alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
   # ARN of the ACM SSL Certificate that will be used
   alb.ingress.kubernetes.io/certificate-arn: ""
   alb.ingress.kubernetes.io/ssl-policy: "ELBSecurityPolicy-TLS13-1-2-2021-06"
   # Enable SSL redirect on the listener
   alb.ingress.kubernetes.io/ssl-redirect: '443'