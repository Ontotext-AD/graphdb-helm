# This example shows how to configure and deploy GraphDB with cluster TLS authentication using
# existing keystore and the default java trust store
configuration:
  # change these variables to match the correct values for your setup
  javaArguments: >-
    -Dgraphdb.raft.security.mode=TLS
    -Dgraphdb.raft.security.rootCerts=
    -Dgraphdb.raft.security.keyAlias=
    -Dgraphdb.raft.security.keystoreFile=
    -Dgraphdb.raft.security.keystorePass=
    -Dgraphdb.raft.security.keystoreProvider=
    -Dgraphdb.raft.security.keystoreType=
    -Dgraphdb.raft.security.truststoreType=JKS
    -Dgraphdb.raft.security.truststoreProvider=SUN
    -Dgraphdb.raft.security.truststorePass=changeit
    -Dgraphdb.raft.security.truststoreFile=/opt/java/openjdk/lib/security/cacerts
extraVolumes:
  - name: keystore-volume
    secret:
      secretName: my-keystore-secret # Change this to the secret that contains your keystore
extraVolumeMounts:
  - name: keystore-volume
    mountPath: /opt/graphdb/home/mykeystore.jks # Change this to the path where you want to mount the keystore
    subPath: mykeystore.jks
