{{- if gt (int $.Values.graphdb.clusterConfig.nodesCount) 1 }}
{{- $configs := ($.Values.graphdb.configs | default dict) }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: gdb-proxy
  labels:
    app: graphdb-cluster-proxy
    {{- include "graphdb.labels" . | nindent 4 }}
spec:
  replicas: {{ $.Values.graphdb.clusterProxy.replicas }}
  serviceName: graphdb-proxy
  podManagementPolicy: Parallel
  revisionHistoryLimit: {{ .Values.graphdb.clusterProxy.revisionHistoryLimit }}
  selector:
    matchLabels:
      app: graphdb-cluster-proxy
  volumeClaimTemplates:
    {{- if $.Values.graphdb.clusterProxy.persistence.enablePersistence }}
    - metadata:
        name: graphdb-cluster-proxy-data-dynamic-pvc
      {{- $spec := dict "globalStorageClassName" $.Values.global.storageClass "spec" $.Values.graphdb.clusterProxy.persistence.volumeClaimTemplateSpec }}
      spec: {{ include "graphdb.renderVolumeClaimTemplateSpec" $spec | nindent 8 }}
    {{- end }}
  template:
    metadata:
      labels:
        app: graphdb-cluster-proxy
        {{- with .Values.graphdb.clusterProxy.podLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/configuration/graphdb-cluster-proxy-configmap.yaml") . | sha256sum }}
        {{- with .Values.graphdb.clusterProxy.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      terminationGracePeriodSeconds: {{ .Values.graphdb.clusterProxy.terminationGracePeriodSeconds }}
      setHostnameAsFQDN: true
      volumes:
        - name: graphdb-properties
          configMap:
            name: graphdb-proxy-properties-configmap
      {{- with $.Values.graphdb.clusterProxy.extraVolumes }}
        {{- tpl ( toYaml . ) $ | nindent 8 }}
      {{- end }}
      {{- with .Values.graphdb.clusterProxy.nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.graphdb.clusterProxy.affinity }}
      affinity: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.graphdb.clusterProxy.tolerations }}
      tolerations: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.graphdb.clusterProxy.topologySpreadConstraints }}
      topologySpreadConstraints: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.graphdb.clusterProxy.podSecurityContext }}
      securityContext: {{- toYaml . | nindent 8 }}
      {{- end }}
      imagePullSecrets:
        {{- include "graphdb.combinedImagePullSecrets" $ | nindent 8 }}
      containers:
        - name: graphdb-proxy
          image: {{ include "graphdb.renderFullImageName" (dict "globalRegistry" $.Values.global.imageRegistry "image" $.Values.images.graphdb) }}
          imagePullPolicy: {{ $.Values.deployment.imagePullPolicy }}
          command: ["/opt/graphdb/dist/bin/cluster-proxy"]
          envFrom:
            - configMapRef:
                name: graphdb-cluster-proxy-configmap
            {{- with $.Values.graphdb.clusterProxy.extraEnvFrom }}
              {{- tpl ( toYaml . ) $ | nindent 12 }}
            {{- end }}
          {{- with .Values.graphdb.clusterProxy.extraEnv }}
          env: {{- tpl ( toYaml . ) $ | nindent 12 }}
          {{- end }}
          ports:
            - name: gdb-proxy-port
              containerPort: 7200
            - name: gdb-proxy-rpc
              containerPort: 7300
          volumeMounts:
            - name: graphdb-properties
              mountPath: /opt/graphdb/home/conf/graphdb.properties
              subPath: graphdb.properties
            {{- if $.Values.graphdb.clusterProxy.persistence.enablePersistence }}
            - name: graphdb-cluster-proxy-data-dynamic-pvc
              mountPath: /opt/graphdb/home
            {{- end }}
            {{- with $.Values.graphdb.clusterProxy.extraVolumeMounts }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with .Values.graphdb.clusterProxy.resources }}
          resources: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.graphdb.clusterProxy.securityContext }}
          securityContext: {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.graphdb.clusterProxy.startupProbe }}
          startupProbe: {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.graphdb.clusterProxy.readinessProbe }}
          readinessProbe: {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.graphdb.clusterProxy.livenessProbe }}
          livenessProbe: {{- toYaml . | nindent 12 }}
          {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: graphdb-cluster-proxy
  labels:
    app: graphdb-cluster-proxy
    {{- include "graphdb.labels" . | nindent 4 }}
  {{- with .Values.graphdb.clusterProxy.service.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  type: {{ $.Values.graphdb.clusterProxy.serviceType }}
  selector:
    app: graphdb-cluster-proxy
  ports:
    - name: gdb-proxy-port
      port: 7200
      targetPort: 7200
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: graphdb-proxy
  labels:
    app: graphdb-cluster-proxy
    {{- include "graphdb.labels" . | nindent 4 }}
  {{- with .Values.graphdb.clusterProxy.headlessService.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  clusterIP: None
  selector:
    app: graphdb-cluster-proxy
  ports:
    - name: gdb-proxy-rpc
      port: 7300
      targetPort: 7300
      protocol: TCP
{{- end }}
