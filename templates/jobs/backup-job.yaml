{{- if and (hasKey .Values.graphdb.backupRestore "auto_backup") .Values.graphdb.backupRestore.enable_backups }}
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: backup-cluster
  annotations:
    "helm.sh/hook": post-install, post-upgrade, post-rollback
    "helm.sh/hook-delete-policy": before-hook-creation, hook-failed
spec:
  failedJobsHistoryLimit: 2
  successfulJobsHistoryLimit: 2
  schedule: {{ .Values.graphdb.backupRestore.auto_backup | quote }}
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: backup
              image: {{ .Values.images.graphdb }}
              volumeMounts:
                - name: graphdb-utils
                  mountPath: /tmp/utils
              command: ['bash',
                        '-c',
                        'cp /tmp/utils/backup.sh /usr/local/bin/backup.sh; chmod +x /usr/local/bin/backup.sh;
                        {{- range .Values.graphdb.backupRestore.repositories }}
                        /usr/local/bin/backup.sh "{{ . }}" {{ $.Values.graphdb.topology | quote }};
                        {{- end }}
                        >> /proc/1/fd/1']
          restartPolicy: Never
          volumes:
          - name: graphdb-utils
            configMap:
              name: graphdb-utils-configmap
{{- end }}
