{{- if gt (int .Values.graphdb.clusterConfig.nodesCount) 1 }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "graphdb.fullname.job.create-cluster" . }}
  labels:
    {{- include "graphdb.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-install, post-upgrade, post-rollback
    "helm.sh/hook-delete-policy": before-hook-creation, hook-succeeded, hook-failed
    "helm.sh/hook-weight": "-1"
    {{- with .Values.annotations }}
      {{- tpl ( toYaml . ) $ | nindent 4 }}
    {{- end }}
spec:
  ttlSecondsAfterFinished: 300
  backoffLimit: 9
  template:
    spec:
      restartPolicy: Never
      {{- if or .Values.global.imagePullSecrets .Values.deployment.imagePullSecrets }}
      imagePullSecrets:
        {{- include "graphdb.combinedImagePullSecrets" . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- $.Values.graphdb.jobPodSecurityContext | toYaml | nindent 8 }}
      containers:
        - name: create-graphdb-cluster
          image: {{ include "graphdb.image" . }}
          env:
            - name: GRAPHDB_POD_NAME
              value: {{ include "graphdb.fullname" . }}
            - name: GRAPHDB_SERVICE_NAME
              value: {{ include "graphdb.fullname.service.headless" . }}
          envFrom:
            - secretRef:
                name: {{ include "graphdb.fullname.secret.provision-user" . }}
          securityContext: {{- $.Values.graphdb.jobSecurityContext | toYaml | nindent 12 }}
          {{- with .Values.graphdb.jobResources }}
          resources: {{ toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: job-temp
              mountPath: /tmp
            - name: graphdb-utils
              mountPath: /tmp/utils
            - name: cluster-config
              mountPath: /tmp/cluster-config
          command: ['bash']
          args:
            - "/tmp/utils/graphdb.sh"
            - createCluster
            - "{{ .Values.graphdb.clusterConfig.nodesCount }}"
            - "/tmp/cluster-config/cluster-config.json"
            - "{{ .Values.graphdb.clusterConfig.clusterCreationTimeout }}"
      volumes:
        - name: job-temp
          emptyDir:
            sizeLimit: 10Mi
        - name: cluster-config
          configMap:
            name: {{ .Values.graphdb.clusterConfig.existingClusterConfig | default ( include "graphdb.fullname.configmap.cluster" . ) }}
        - name: graphdb-utils
          configMap:
            name: {{ include "graphdb.fullname.configmap.utils" . }}
{{- end }}
