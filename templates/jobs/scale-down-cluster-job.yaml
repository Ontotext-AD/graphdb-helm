{{- $authToken := printf "%s:%s" .Values.graphdb.security.provisioningUsername .Values.graphdb.security.provisioningPassword | b64enc }}
apiVersion: {{ $.Values.versions.job }}
kind: Job
metadata:
  name: scale-down-cluster-job
  labels:
    {{- include "graphdb.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-upgrade, pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation, hook-succeeded, hook-failed
spec:
  ttlSecondsAfterFinished: 300
  template:
    spec:
      imagePullSecrets:
        {{- include "combinedImagePullSecrets" $ | nindent 8 }}
      containers:
        - name: scale-down-cluster
          image: {{ include "renderFullImageName" (dict "globalRegistry" $.Values.global.imageRegistry "image" $.Values.images.graphdb) }}
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 0
          volumeMounts:
            - name: graphdb-utils
              mountPath: /tmp/utils
          command: ['sh','-c']
          args:
            - |
              cp /tmp/utils/update-cluster.sh /usr/local/bin/update-cluster.sh; chmod +x /usr/local/bin/update-cluster.sh
              /usr/local/bin/update-cluster.sh removeNodes {{ .Values.graphdb.clusterConfig.nodesCount }} "{{ $authToken }}" {{ $.Release.Namespace }} >> /proc/1/fd/1
      restartPolicy: Never
      volumes:
        - name: graphdb-utils
          configMap:
            name: graphdb-utils-configmap
  backoffLimit: 4

