###############################################################################
# Main configuration file                                                     #
# To override single property use --set                                       #
# To override multiple, provide another values-override.yaml with the -f flag #
# See https://helm.sh/docs/chart_template_guide/values_files/                 #
###############################################################################

#########################
# Global Configurations #
#########################

global:
  # Overrides image.registry
  imageRegistry: ""
  # Inserts additional pull secret references together along with any from image.pullSecrets
  imagePullSecrets: []
  # The default domain suffix of the Kubernetes cluster
  clusterDomain: cluster.local

###############################
#   Metadata Configurations   #
# Naming and labels overrides #
###############################

# Overrides the name of the chart affecting the resources names for GraphDB
# To override the GraphDB proxy's name, use proxy.nameOverride
nameOverride: ""

# Overrides the naming of all GraphDB resources, effectively removing the release name prefix. Takes precedence over nameOverride
# To override the GraphDB proxy's full name, use proxy.fullnameOverride
fullnameOverride: ""

# Overrides the deployment namespace in case of multi-namespace deployments in umbrella charts.
# The default is .Release.Namespace
namespaceOverride: ""

# Additional common labels to add to all resources
labels: {}

# Additional common annotations to add to all resources
annotations: {}

################################
# GraphDB Image Configurations #
################################

image:
  registry: docker.io
  repository: ontotext/graphdb
  # If specified, overrides Chart.AppVersion
  tag: ""
  # Expected SHA256 digest of the used GraphDB image, e.g. "sha256@abc"
  digest: "sha256:aabf1283664b1cbeeb9880025bbea6820c4a7f5a3a54e5940534e916b8829035"
  # Defines the policy for pulling images
  pullPolicy: IfNotPresent
  # Secrets for pulling GraphDB's Docker image from secured registries.
  pullSecrets: []

##########################
# Scaling Configurations #
##########################

# Number of GraphDB nodes to be deployed as part of the StatefulSet.
# Set value to 1 to run a standalone GraphDB instance or to more to form a GraphDB cluster with GraphDB cluster proxies.
# This setting control the deployment of the cluster proxies and cluster jobs as well.
replicas: 1

##########################
# GraphDB Configurations #
##########################

# License configurations.
# License is needed for GraphDB Enterprise Edition features
license:
  # Reference to a secret containing 'graphdb.license' file to be mounted in the GraphDB instances.
  existingSecret: ""
  # File name of the GraphDB license file in the existing license secret. Default is graphdb.license
  licenseFilename: graphdb.license

# GraphDB runtime configuration settings.
# For reference, see https://graphdb.ontotext.com/documentation/10.6/directories-and-config-properties.html
configuration:
  # The public URL at which GraphDB will be accessed.
  # This configures both GraphDB address resolving and the default Ingress resource as well.
  #
  # Note: When deploying on a context path different from /, you need to properly configure the Ingress according to the requirements of the
  # Ingress controller implementation.
  externalUrl: http://graphdb.127.0.0.1.nip.io/

  # GraphDB properties to insert in the default graphdb.properties configmap
  properties: {}

  # Sensitive GraphDB properties to insert in the default graphdb.properties secret
  secretProperties: {}

  # Default Java arguments with which node instances will be launched.
  # GraphDB configuration properties can also be passed here in the format -Dproperty=value
  # Takes precedence over configurations in graphdb.properties
  defaultJavaArguments: -XX:+UseContainerSupport -XX:MaxRAMPercentage=70 -XX:-UseCompressedOops

  # Java arguments to append after defaultJavaArguments, use to avoid overriding the default values
  javaArguments: ""

#####################################
# Additional GraphDB Configurations #
#####################################

# Additional configurations that will be provisioned to GraphDB
extraConfiguration:
  # Additional GraphDB configurations that will be appended to graphdb.properties, effectively overriding anything configured
  # in the default configmap and secret resources.
  properties:
    # Reference to an existing ConfigMap resource containing GraphDB configurations
    existingConfigmap: ""
    # Key in the existing ConfigMap that holds the properties for GraphDB
    configmapKey: graphdb.properties

    # Reference to an existing Secret resource containing sensitive GraphDB configurations
    existingSecret: ""
    # Key in the existing Secret that holds the properties for GraphDB
    secretKey: graphdb.properties

###############################################
# Initial Provisioning GraphDB Configurations #
###############################################

initialConfiguration:
  settings:
    existingConfigmap: ""
    configmapKey: settings.js
  users:
    existingSecret: ""
    secretKey: users.js

#################################
# GraphDB Logging Configuration #
#################################

logging:
  logback:
    existingConfigmap: ""
    configmapKey: logback.xml

###################################
# GraphDB Security Configurations #
###################################

security:
  enabled: false
  # Administrator user with ROLE_ADMIN authority
  admin:
    username: admin
    # If the password is not specified, it will use the default one for GraphDB which is "root"
    password: ""
  # Provisioning user with ROLE_ADMIN authority
  # If the security is enabled, it's mandatory to have a provisioning user, so the cluster provisioning can work properly.
  provisioner:
    # The following user will be created in the default initial users.js and used in the cluster provisioning
    username: provisioner
    password: iHaveSuperpowers
    # Reference to a basic authentication token of an existing user to use for provisioning instead of the default user in the initial user.js
    # Note that the user must already exist in GraphDB for this to work properly.
    existingSecret: ""
    # Field name in the secret holding the authentication token.
    tokenKey: GRAPHDB_AUTH_TOKEN
  # Additional users to insert in the default users.js (see files/config/users.js)
  # Check the default user.js syntax for details.
  # Note that this won't be applied if you provide a custom Secret object with user.js via initialConfiguration.users.existingSecret
  users: {}

##################################
# GraphDB Cluster Configurations #
##################################

cluster:
  # A secret used for secure communication amongst the nodes in the cluster.
  clusterSecret: s3cr37
  # Reference to an existing Secret that contains the cluster secret token. This overrides cluster.clusterSecret
  existingClusterSecret: ""
  # Key in the existing Secret that holds the secret cluster token for GraphDB
  existingClusterSecretKey: ""

  # Timeout for the cluster creation CURL query.
  # Note: By default helm waits for Kubernetes commands to complete for 5 minutes. You can increase that by adding "--timeout 10m" to the helm command.
  clusterCreationTimeout: 60
  # Use a custom JSON configuration when creating the cluster, see https://graphdb.ontotext.com/documentation/10.6/creating-a-cluster.html#creation-parameters
  # This setting overrides the values under cluster.config
  existingConfig: ""
  # The key in the existing cluster config configmap (if specified) that contains the cluster configuration JSON
  existingConfigmapKey: cluster-config.json
  # Cluster configuration parameters:
  # Refer to https://graphdb.ontotext.com/documentation/10.6/creating-a-cluster.html#creation-parameters
  config:
    # The minimum wait time in milliseconds for a heartbeat from a leader.
    electionMinTimeout: 8000
    # The variable portion of each waiting period in milliseconds for a heartbeat.
    electionRangeTimeout: 6000
    # The interval in milliseconds between each heartbeat that is sent to follower nodes by the leader.
    heartbeatInterval: 2000
    # The size in KB of the data blocks transferred during data replication streaming through the RPC protocol.
    messageSizeKB: 64
    # Maximum size of the transaction log in GBs. The transaction log will be automatically truncated if it becomes bigger than this value.
    transactionLogMaximumSizeGB: 50
    # The amount of time in milliseconds a follower node would wait before attempting to verify the last committed entry when the first verification is unsuccessful.
    verificationTimeout: 1500
  # Jobs configurations for to the cluster automation
  jobs:
    createCluster:
      # Enables or disables the cluster creation Job
      enabled: true
    patchCluster:
      # Enables or disables the Job for patching the cluster configuration
      enabled: true
    scaleCluster:
      # Enables or disables the Jobs for scaling up or down the cluster
      enabled: true

##########################
# Ingress Configurations #
##########################

ingress:
  # Toggles the deployment of the default ingress
  enabled: true
  # Specifies the ingress controller implementation that will deploy this ingress.
  # Not defining this would result in using the default ingress controller in the cluster, if there is one.
  className: ""
  # Sets extra ingress labels
  labels: {}
  # Sets extra ingress annotations
  annotations: {}
  # If set, overrides the host from configuration.externalUrl
  host: ""
  # If set, overrides the context path from configuration.externalUrl
  path: ""
  # Sets the ingress path type.
  # If you need to use ImplementationSpecific, make sure to set any annotations needed by the controller implementation.
  pathType: Prefix
  # Configures SSL termination on ingress level.
  # See https://kubernetes.github.io/ingress-nginx/examples/tls-termination/
  tls:
    # Feature toggle for SSL termination. Disabled by default.
    # If TLS is enabled, the deployment.protocol should also be updated (https)
    enabled: false
    # Name of a Kubernetes secret object with the key and certificate.
    # If TLS is enabled, it's required to be provided, depending on the deployment.
    secretName:
  # List of additional hostnames to append to the ingress resource
  extraHosts: []
  # List of additional TLS records to append to the ingress resource
  extraTLS: []

##########################
# Service Configurations #
##########################

# This service is deployed only when the replicas are set to 1, in cluster mode, this service does not exist.
service:
  # Enables or disables the Service deployment
  enabled: true
  # Extra labels to append to the service
  labels: {}
  # Extra annotations to append to the service
  annotations: {}
  # Service type used by the graphdb-cluster-proxy service
  type: ClusterIP
  # Ports exposed by the service
  ports:
    http: 7200
  # Exposes the service on a specific node port on the host machine when "serviceType: NodePort"
  # If left undefined, K8S will pick a random port from the node port range of the cluster.
  nodePort: ""
  # Defines the policy for treating external ingress traffic.
  # By default, Cluster does not preserve client IPs. Change to Local to preserve them.
  # See https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
  externalTrafficPolicy: ""
  # NodePort used by external load balancers when the external traffic policy is set to Local.
  # By default, Kubernetes will assign a random port, use this to override it.
  healthCheckNodePort: ""
  # Defines the class that should select a particular load balancer implementation.
  # By default, Kubernetes will assign the cluster default implementation, use this to override it.
  # See https://kubernetes.io/docs/concepts/services-networking/service/#load-balancer-class
  loadBalancerClass: ""
  # Source IP ranges for restricting external ingress traffic
  loadBalancerSourceRanges: []
  # External IP addresses at which the service will be exposed
  # See https://kubernetes.io/docs/concepts/services-networking/service/#external-ips
  externalIPs: []
  # Additional ports to expose with the service
  extraPorts: []

headlessService:
  # Enables or disables the headless Service deployment
  enabled: true
  # Extra labels to append to the headless service
  labels: {}
  # Extra annotations to append to the service
  annotations: {}
  # Ports exposed by the service
  ports:
    http: 7200
    rpc: 7300

##############################
# Persistence Configurations #
##############################

persistence:
  # Toggles the persistence of GraphDB data.
  # If enabled, the StatefulSet will use a PVC template.
  # If disabled, it fallbacks to an emptyDir volume.
  enabled: true
  # Configurations for PVC based persistence
  volumeClaimTemplate:
    # Extra labels to add to the PVC template.
    labels: {}
    # Extra annotations to add to the PVC template.
    annotations: {}
    # Specification for a PVC to be created by the StatefulSet
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 5Gi
  # Configurations for an emptyDir volume to be used for data storage by the StatefulSet.
  # Used when the persistence is disabled.
  emptyDir:
    sizeLimit: 1G

##############################
# Statefulset Configurations #
##############################

# Configures the strategy of updating pods
updateStrategy:
  type: RollingUpdate

# Configures how pods are created and scaled
podManagementPolicy: Parallel

# changes the maximum amount of kept revisions
revisionHistoryLimit: 10

# grace period in seconds before terminating the pods
terminationGracePeriodSeconds: 120

# Toggles the auto mounting of API credentials token into the pods.
# Enable this if you need to contact either the API server or need web identity credentials for federated authentication in cloud APIs.
automountServiceAccountToken: false

# Overrides the default scheduler
schedulerName: ""

# Overrides the pod's DNS settings
dnsConfig: {}

# Defines the pod's policy for DNS resolution
dnsPolicy: ""

# Overrides the default container command, use only for troubleshooting!
command: []

# Overrides the default container command's arguments, use only for troubleshooting!
args: []

# Ports used by the GraphDB container
containerPorts:
  http: 7200
  rpc: 7300

# Extra pod labels to insert
podLabels: {}

# Extra pod annotations to insert
podAnnotations: {}

###################################
# Security Context Configurations #
###################################

# Defines privilege and access control settings for the node pods.
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 10001
  runAsGroup: 10001
  fsGroup: 10001
  fsGroupChangePolicy: OnRootMismatch
  seccompProfile:
    type: RuntimeDefault

# Defines privilege and access control settings for the node container running GraphDB.
securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  capabilities:
    drop: [ "ALL" ]
  seccompProfile:
    type: RuntimeDefault

# Defines privilege and access control settings for the init containers provisioning configurations for GraphDB.
initContainerSecurityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  capabilities:
    drop: [ "ALL" ]
  seccompProfile:
    type: RuntimeDefault

# Optional init container that can change the permissions to match the security context settings.
# Use when you have existing persistent volumes with mismatching permissions.
initContainerDataPermissions:
  enabled: false
  securityContext:
    runAsNonRoot: false
    runAsUser: 0

#############################
# Scheduling Configurations #
#############################

nodeSelector: {}

affinity: {}

tolerations: []

topologySpreadConstraints: []

##########################
# Resource Configuration #
##########################

# Below are minimum requirements for data sets of up to 50 million RDF triples
# For resizing, refer according to the GraphDB documentation
# https://graphdb.ontotext.com/documentation/10.6/requirements.html
resources:
  limits:
    memory: 2Gi
    ephemeral-storage: 10Mi
  requests:
    memory: 2Gi
    cpu: 500m
    ephemeral-storage: 10Mi

# initContainerResources defines resource requests and limits for the node containers provisioning configurations for GraphDB.
initContainerResources:
  limits:
    memory: 16Mi
    cpu: 50m
    ephemeral-storage: 10Mi
  requests:
    memory: 16Mi
    cpu: 50m
    ephemeral-storage: 10Mi

#########################
# Probes Configurations #
#########################

# Configurations for the GraphDB node startup probe. Misconfigured probe can lead to a failing cluster.
startupProbe:
  httpGet:
    path: /protocol
    port: http
  failureThreshold: 30
  timeoutSeconds: 5
  periodSeconds: 10

# Configurations for the GraphDB node readiness probe. Misconfigured probe can lead to a failing cluster.
readinessProbe:
  httpGet:
    path: /protocol
    port: http
  initialDelaySeconds: 5
  timeoutSeconds: 5
  periodSeconds: 10

# Configurations for the GraphDB node liveness probe. Misconfigured probe can lead to a failing cluster.
livenessProbe:
  httpGet:
    path: /protocol
    port: http
  initialDelaySeconds: 60
  timeoutSeconds: 5
  periodSeconds: 10

#########################################
# Additional Statefulset Configurations #
#########################################

# Additional environment variables to be set for the graphdb nodes
extraEnvFrom: []

# Additional environment variables to be set for the graphdb nodes
extraEnv: []

# Additional volumes to be set for the graphdb nodes
extraVolumes: []

# Additional volume mounts to be set for the graphdb nodes
extraVolumeMounts: []

# Additional volume claim templates to be set in GraphDB's StatefulSet
extraVolumeClaimTemplates: []

# Additional init containers inserted after the provisioning init containers
extraInitContainers: []

# Additional container ports to expose
extraContainerPorts: {}

# Additional containers to insert into the GraphDB pods, e.g. sidecar containers
# Values are processed as templates
extraContainers: []

########################################
# Pod Disruption Budget Configurations #
########################################

# See https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#pod-disruption-budgets
podDisruptionBudget:
  enabled: false
  minAvailable: 51%
  maxUnavailable: ""

##################################
# Service Account Configurations #
##################################

# GraphDB by itself has no need to communicate with the Kubernetes API but the service account tokens can be used
# as ODIC federated web identity tokens for authentication in cloud APIs.
serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
  # If create is true, add extra annotations to the created service account.
  annotations: {}

############################################
#       GraphDB Import Configurations      #
# Settings for importing data into GraphDB #
############################################

import:
  # Attach additional PV which will be used as an import directory
  # https://graphdb.ontotext.com/documentation/10.6/loading-data-using-the-workbench.html#importing-server-files
  # WARNING: Setting enabled to true in most cloud providers will result in an error
  volumeMount:
    enabled: false
    volumeClaimTemplate:
      labels: {}
      annotations: {}
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 10Gi

#######################################
## Custom Repositories Configurations #
#######################################

repositories:
  # Optional configmap containing repository configuration ttl file(s).
  # GraphDB will automatically create repositories with the provided repositories configuration files
  # Each key in the existing configmap will be treated as the config.ttl of a repository
  repositoriesConfigmap: ""

######################################################################################
#                                Job Configurations                                  #
# Common settings for Job resources servicing and automating GraphDB and the cluster #
######################################################################################

jobs:
  # Number of retries before considering the jobs failed
  backoffLimit: 10
  # Time in seconds before deleting finished pods
  ttlSecondsAfterFinished: 300
  # podSecurityContext defines privilege and access control settings for all the job pods
  podSecurityContext:
    runAsNonRoot: true
    runAsUser: 10001
    runAsGroup: 10001
    fsGroup: 10001
    fsGroupChangePolicy: OnRootMismatch
    seccompProfile:
      type: RuntimeDefault
  # securityContext defines privilege and access control settings for all the job containers
  securityContext:
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop: [ "ALL" ]
    seccompProfile:
      type: RuntimeDefault
  # resources defines resource requests and limits for all the job containers
  resources:
    limits:
      memory: 16Mi
      cpu: 50m
      ephemeral-storage: 10Mi
    requests:
      memory: 16Mi
      cpu: 50m
      ephemeral-storage: 10Mi
  # Persistence configurations for all jobs
  persistence:
    # Empty directory volume for temporary file storage of scripts
    emptyDir:
      sizeLimit: 10Mi

###############################################################################
#                    GraphDB Cluster Proxy Configurations                     #
# Settings for the cluster proxy used to communicate with the GraphDB cluster #
###############################################################################

proxy:
  # Overrides the name of the GraphDB proxy component
  nameOverride: ""

  # Overrides the naming of all GraphDB proxy resources, effectively removing the release name prefix. Takes precedence over proxy.nameOverride
  fullnameOverride: ""

  # Additional common labels to add to the GraphDB proxy resources
  labels: {}

  # Additional common annotations to add to the GraphDB proxy resources
  annotations: {}

  ################################
  # GraphDB Proxy Configurations #
  ################################

  configuration:
    # GraphDB proxy properties to insert in the default graphdb.properties proxy ConfigMap
    properties: {}

    # Sensitive GraphDB properties to insert in the default graphdb.properties proxy Secret
    secretProperties: {}

    # Java arguments with which the cluster proxy instances will be launched.
    # GraphDB configuration properties can also be passed here in the format -Dprop=value
    # Takes precedence over configurations in graphdb.properties
    defaultJavaArguments: -XX:+UseContainerSupport -XX:MaxRAMPercentage=70

    # Java arguments to append after defaultJavaArguments, use to avoid overriding the default values
    javaArguments: ""

  ###########################################
  # Additional GraphDB Proxy Configurations #
  ###########################################

  # Additional configurations that will be provisioned to GraphDB
  extraConfiguration:
    # Additional GraphDB configurations that will be appended to graphdb.properties, effectively overriding anything configured
    # in the default configmap and secret resources.
    properties:
      # Reference to an existing ConfigMap resource containing GraphDB configurations
      existingConfigmap: ""
      # Key in the existing ConfigMap that holds the properties for GraphDB
      configmapKey: graphdb.properties

      # Reference to an existing Secret resource containing sensitive GraphDB configurations
      existingSecret: ""
      # Key in the existing Secret that holds the properties for GraphDB
      secretKey: graphdb.properties

  #######################################
  # GraphDB Proxy Logging Configuration #
  #######################################
  logging:
    logback:
      existingConfigmap: ""
      configmapKey: logback.xml

  ##########################
  # Service Configurations #
  ##########################

  # GraphDB cluster proxy service configurations
  service:
    # Enables or disables the Service deployment
    enabled: true
    # Extra labels to append to the service
    labels: {}
    # Extra annotations to append to the service
    annotations: {}
    # Service type used by the graphdb-cluster-proxy service
    type: ClusterIP
    # Ports exposed by the service
    ports:
      http: 7200
    # Exposes the service on a specific node port on the host machine when "serviceType: NodePort"
    # If left undefined, K8S will pick a random port from the node port range of the cluster.
    nodePort: ""
    # Defines the policy for treating external ingress traffic.
    # By default, Cluster does not preserve client IPs. Change to Local to preserve them.
    # See https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
    externalTrafficPolicy: ""
    # NodePort used by external load balancers when the external traffic policy is set to Local.
    # By default, Kubernetes will assign a random port, use this to override it.
    healthCheckNodePort: ""
    # Defines the class that should select a particular load balancer implementation.
    # By default, Kubernetes will assign the cluster default implementation, use this to override it.
    # See https://kubernetes.io/docs/concepts/services-networking/service/#load-balancer-class
    loadBalancerClass: ""
    # Source IP ranges for restricting external ingress traffic
    loadBalancerSourceRanges: []
    # External IP addresses at which the service will be exposed
    # See https://kubernetes.io/docs/concepts/services-networking/service/#external-ips
    externalIPs: []
    # Additional proxy ports to expose with the service
    extraPorts: []

  # GraphDB cluster proxy headless service configurations
  headlessService:
    # Enables or disables the headless Service deployment
    enabled: true
    # Extra labels to append to the headless service
    labels: {}
    # Extra annotations to append to the service
    annotations: {}
    # Ports exposed by the service
    ports:
      http: 7200
      rpc: 7300

  ##############################
  # Persistence Configurations #
  ##############################

  # Persistence for storing GraphDB proxy log files.
  # See https://kubernetes.io/docs/concepts/storage/persistent-volumes/
  persistence:
    # Toggles the persistence of GraphDB proxy data.
    # If enabled, the StatefulSet will use a PVC template.
    # If disabled, it fallbacks to an emptyDir volume.
    enabled: true
    # Configurations for PVC based persistence
    volumeClaimTemplate:
      # Extra labels to add to the PVC template.
      labels: {}
      # Extra annotations to add to the PVC template.
      annotations: {}
      # Specification for a PVC to be created by the StatefulSet
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 500Mi
    # Configurations for an emptyDir volume to be used for data storage by the StatefulSet.
    # Used when the persistence is disabled.
    emptyDir:
      sizeLimit: 1Gi

  ##############################
  # Statefulset Configurations #
  ##############################

  # Configures the strategy of updating proxy pods
  updateStrategy:
    type: RollingUpdate

  # Configures how proxy pods are created and scaled
  podManagementPolicy: Parallel

  # Number of cluster proxies used to access the GraphDB cluster
  replicas: 1

  # Changes the maximum amount of kept revisions
  revisionHistoryLimit: 10

  # Grace period in seconds before terminating the pods
  terminationGracePeriodSeconds: 30

  # Overrides the default scheduler
  schedulerName: ""

  # Overrides the pod's DNS settings
  dnsConfig: {}

  # Defines the pod's policy for DNS resolution
  dnsPolicy: ""

  # Overrides the default container command, use only for troubleshooting!
  command: []

  # Overrides the default container command's arguments, use only for troubleshooting!
  args: []

  # Ports used by GraphDB proxy and the Service components
  containerPorts:
    http: 7200
    rpc: 7300

  # Extra pod labels to insert
  podLabels: {}

  # Extra pod annotations to insert
  podAnnotations: {}

  ###################################
  # Security Context Configurations #
  ###################################

  # Defines privilege and access control settings for the proxy pods.
  podSecurityContext:
    runAsNonRoot: true
    runAsUser: 10001
    runAsGroup: 10001
    fsGroup: 10001
    fsGroupChangePolicy: OnRootMismatch
    seccompProfile:
      type: RuntimeDefault

  # Defines privilege and access control settings for the proxy containers.
  securityContext:
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop: [ "ALL" ]
    seccompProfile:
      type: RuntimeDefault

  # Defines privilege and access control settings for the init containers provisioning configurations for GraphDB.
  initContainerSecurityContext:
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop: [ "ALL" ]
    seccompProfile:
      type: RuntimeDefault

  # Optional init container that can change the permissions to match the security context settings.
  # Use when you have existing persistent volumes with mismatching permissions.
  initContainerDataPermissions:
    enabled: false
    securityContext:
      runAsNonRoot: false
      runAsUser: 0

  #############################
  # Scheduling Configurations #
  #############################

  nodeSelector: {}

  affinity: {}

  tolerations: []

  topologySpreadConstraints: []

  ##########################
  # Resource Configuration #
  ##########################

  # Minimum requirements for a successfully running GraphDB cluster proxy
  resources:
    limits:
      memory: 1500Mi
      ephemeral-storage: 10Mi
    requests:
      memory: 1500Mi
      cpu: 100m
      ephemeral-storage: 10Mi

  # Defines resource requests and limits for the containers provisioning configurations for GraphDB.
  initContainerResources:
    limits:
      memory: 16Mi
      cpu: 50m
      ephemeral-storage: 10Mi
    requests:
      memory: 16Mi
      cpu: 50m
      ephemeral-storage: 10Mi

  #########################
  # Probes Configurations #
  #########################

  # Configurations for the GraphDB cluster proxy startup probe. Misconfigured probe can lead to a failing cluster.
  startupProbe:
    httpGet:
      path: /proxy/ready
      port: http
    failureThreshold: 60
    timeoutSeconds: 3
    periodSeconds: 5

  # Configurations for the GraphDB cluster proxy readiness probe. Misconfigured probe can lead to a failing cluster.
  readinessProbe:
    httpGet:
      path: /proxy/ready
      port: http
    timeoutSeconds: 5
    periodSeconds: 10

  # Configurations for the GraphDB cluster proxy liveness probe. Misconfigured probe can lead to a failing cluster.
  livenessProbe:
    httpGet:
      path: /proxy/health
      port: http
    initialDelaySeconds: 120
    timeoutSeconds: 5
    periodSeconds: 10

  #########################################
  # Additional Statefulset Configurations #
  #########################################

  # Additional environment variables to be set for each cluster proxy
  extraEnvFrom: []

  # Additional environment variables to be set for each cluster proxy
  extraEnv: []

  # Additional volumes to be set for each cluster proxy
  extraVolumes: []

  # Additional volume mounts to be set for each cluster proxy
  extraVolumeMounts: []

  # Additional volume claim templates to be set in the proxy's StatefulSet
  extraVolumeClaimTemplates: []

  # Additional init containers to be set for each cluster proxy
  extraInitContainers: []

  # Additional container ports to expose for each cluster proxy
  extraContainerPorts: {}

  # Additional containers to insert into the GraphDB proxy pods, e.g. sidecar containers
  # Values are processed as templates
  extraContainers: []

  ########################################
  # Pod Disruption Budget Configurations #
  ########################################

  # See https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#pod-disruption-budgets
  podDisruptionBudget:
    enabled: false
    minAvailable: 51%
    maxUnavailable: ""

#################################
# Additional Kubernetes Objects #
#################################

# Additional objects to insert along with the release.
# Values are processed as templates.
extraObjects: []
